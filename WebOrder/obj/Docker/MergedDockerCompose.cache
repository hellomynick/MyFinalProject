services:
  basket.api:
    build:
      context: E:\MyFinalProject\WebOrder
      dockerfile: E:\MyFinalProject\WebOrder\Services\Basket\Basket.API\Dockerfile
    depends_on:
      basketdata:
        condition: service_started
      identity.api:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      AzureServiceBusEnabled: "False"
      ConnectionString: basketdata
      EventBusConnection: rabbitmq
      EventBusPassword: ""
      EventBusUserName: ""
      GRPC_PORT: "81"
      IdentityUrlExternal: http://:5105
      OrchestratorType: ""
      PATH_BASE: /basket.api
      PORT: "80"
      UseLoadTest: "False"
      identityUrl: http://identity.api
    image: eshop/basket.api:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5103
      protocol: tcp
    - mode: ingress
      target: 81
      published: 9103
      protocol: tcp
  basketdata:
    image: redis:alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 6379
      published: 6379
      protocol: tcp
  catalog.api:
    build:
      context: E:\MyFinalProject\WebOrder
      dockerfile: E:\MyFinalProject\WebOrder\Services\Catalog\Catalog.API\Dockerfile
    depends_on:
      identitystore:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ApplicationInsights__InstrumentationKey: ""
      AzureStorageAccountKey: ""
      AzureStorageAccountName: ""
      ConnectionString: Server=sqldata;Database=WebOrder.Services.CatalogDb;User Id=sa;Password=Admin@123
      EventBusConnection: rabbitmq
      EventBusPassword: ""
      EventBusUserName: ""
      GRPC_PORT: "81"
      IdentityUrlExternal: http://:5106
      OrchestratorType: ""
      PATH_BASE: /catalog-api
      PORT: "80"
      PicBaseUrl: ""
      UseCustomizationData: "True"
      identityUrl: http://identitystore
    image: eshop/catalog.api:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5101
      protocol: tcp
    - mode: ingress
      target: 81
      published: 9101
      protocol: tcp
  identity.api:
    build:
      context: E:\MyFinalProject\WebOrder
      dockerfile: E:\MyFinalProject\WebOrder\Services\Identity\Identity.API\Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      BasketApiClient: http://:5103
      ConnectionString: Server=sqldata;Database=WebOrder.Service.IdentityDb;User Id=sa;Password=Admin@123
      MobileShoppingAggClient: http://:5120
      MvcClient: http://:5100
      OrchestratorType: ""
      OrderingApiClient: http://:5102
      SpaClient: http://:5104
      UseCustomizationData: "True"
      WebShoppingAggClient: http://:5121
      WebhooksApiClient: http://:5113
      WebhooksWebClient: http://:5114
      XamarinCallback: http://:5105/xamarincallback
    image: eshop/identity.api:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5105
      protocol: tcp
  identitystore:
    build:
      context: E:\MyFinalProject\WebOrder
      dockerfile: E:\MyFinalProject\WebOrder\Services\Identity\IdentityStore\Dockerfile
    depends_on:
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      BasketApiClient: http://:5103
      ConnectionString: Server=sqldata;Database=WebOrder.Service.IdentityStoreDb;User
        Id=sa;Password=Admin@123
      MobileShoppingAggClient: http://:5120
      MvcClient: http://:5100
      OrchestratorType: ""
      OrderingApiClient: http://:5102
      SpaClient: http://:5104
      UseCustomizationData: "True"
      WebShoppingAggClient: http://:5121
      WebhooksApiClient: http://:5113
      WebhooksWebClient: http://:5114
      XamarinCallback: http://:5105/xamarincallback
    image: eshop/identitystore:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5106
      protocol: tcp
  nosqldata:
    image: mongo
    networks:
      default: null
  ordering.api:
    build:
      context: E:\MyFinalProject\WebOrder
      dockerfile: E:\MyFinalProject\WebOrder\Services\Ordering\Ordering.API\Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      CheckUpdateTime: "30000"
      ConnectionString: Server=sqldata;Database=WebOrder.Services.OrderingDb;User
        Id=sa;Password=Admin@123
      EventBusConnection: rabbitmq
      EventBusPassword: ""
      EventBusUserName: ""
      GRPC_PORT: "81"
      IdentityUrlExternal: http://:5105
      OrchestratorType: ""
      PATH_BASE: /ordering-api
      PORT: "80"
      Serilog__MinimumLevel__Override__WebOrder.BuildingBlocks.EventBusRabbitMQ: Verbose
      Serilog__MinimumLevel__Override__ordering-api: Verbose
      UseCustomizationData: "True"
      UseLoadTest: "False"
      identityUrl: http://identity.api
    image: eshop/ordering.api:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5102
      protocol: tcp
    - mode: ingress
      target: 81
      published: 9102
      protocol: tcp
  ordering.backgroundtasks:
    build:
      context: E:\MyFinalProject\WebOrder
      dockerfile: E:\MyFinalProject\WebOrder\Services\Ordering\Ordering.BackgroundTasks\Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      AzureServiceBusEnabled: "False"
      CheckUpdateTime: "30000"
      ConnectionString: Server=sqldata;Database=WebOrder.Services.OrderingDb;User
        Id=sa;Password=Admin@123
      EventBusConnection: rabbitmq
      EventBusPassword: ""
      EventBusUserName: ""
      GracePeriodTime: "1"
      OrchestratorType: ""
      Serilog__MinimumLevel__Override__WebOrder.BuildingBlocks.EventBusRabbitMQ: Verbose
      UseCustomizationData: "True"
      UseLoadTest: "False"
    image: eshop/ordering.backgroundtasks:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5111
      protocol: tcp
  ordering.signalrhub:
    build:
      context: E:\MyFinalProject\WebOrder
      dockerfile: E:\MyFinalProject\WebOrder\Services\Ordering\Ordering.SignalrHub\Dockerfile
    depends_on:
      basket.api:
        condition: service_started
      catalog.api:
        condition: service_started
      identity.api:
        condition: service_started
      nosqldata:
        condition: service_started
      ordering.api:
        condition: service_started
      rabbitmq:
        condition: service_started
      sqldata:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:80
      ApplicationInsights__InstrumentationKey: ""
      EventBusConnection: rabbitmq
      EventBusPassword: ""
      EventBusUserName: ""
      OrchestratorType: ""
      identityUrl: http://identity.api
    image: eshop/ordering.signalrhub:linux-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5112
      protocol: tcp
  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      default: null
    ports:
    - mode: ingress
      target: 15672
      published: 15672
      protocol: tcp
    - mode: ingress
      target: 5672
      published: 5672
      protocol: tcp
  seq:
    environment:
      ACCEPT_EULA: "Y"
    image: datalust/seq:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: 5340
      protocol: tcp
  sqldata:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Admin@123
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: 5433
      protocol: tcp
networks:
  default:
    name: dockercompose10855430136696232203_default